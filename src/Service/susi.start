#!/bin/bash
#
# Basic service for NoSnips replacement service.
# Usage:
#     susi.start
#
# (c) Jan 2020, Andreas Dominik
#

# load tool funs:
#
source $SUSI_INSTALLATION/src/Tools/init_susi.sh
cd $local_work_directory

if [[ $local_satellite == true ]] ; then
  DAEMONS="hotword record say"
else
  DAEMONS="hotword record play stt nlu duckling tts session"

  # start MQTT broker:
  #
  if ! test -d ${local_application_data}/Susi/Mosquitto ; then
    mkdir -p ${local_application_data}/Susi/Mosquitto
  fi

  MOSQUITTO_DIR="${local_application_data}/Susi/Mosquitto"
  MOSQUITTO_CONF="${MOSQUITTO_DIR}/mosquitto.conf"
  MOSQUITTO_PW="${MOSQUITTO_DIR}/passwd"
  cp /etc/mosquitto/mosquitto.conf $MOSQUITTO_CONF

  addOrReplace $MOSQUITTO_CONF "^log_dest file" "log_dest file ${MOSQUITTO_DIR}/mosquitto.log"
  addOrReplace $MOSQUITTO_CONF "^pid_file" "pid_file ${MOSQUITTO_DIR}/mosquitto.pid"
  addOrReplace $MOSQUITTO_CONF "^persistence_location" "persistence_location ${MOSQUITTO_DIR}/"

  # add user/pw to passdw file if defined in susi.toml:
  #
  if [[ -n $mqtt_user 1 && -n $mqtt_password ]] ; then
    addOrReplace $MOSQUITTO_CONF "^password_file" "password_file $MOSQUITTO_PW"
    addOrReplace $MOSQUITTO_CONF "^allow_anonymous" "allow_anonymous false"
    mosquitto_passwd -b $MOSQUITTO_PW $mqtt_user $mqtt_password
  else
    addOrReplace $MOSQUITTO_CONF "^allow_anonymous" "allow_anonymous true"
  fi
  mosquitto --daemon --config-file $MOSQUITTO_CONF
fi

MONITOR_PIDS=""

function startDaemon() {

  _DAEMON=$1
  _RUN_KEY="${DAEMON}_start"
  _PATH_KEY="${DAEMON}_daemon"
  _FLAG=${!_RUN_KEY}
  _EXEC="$(relDir ${!_PATH_KEY})"

  if [[ $_FLAG == true ]] ; then
    echo "starting $_DAEMON daemon"
    $_EXEC &

    # make list to monitor:
    #
    _PID=$!
    MONITOR_PIDS="$MONITOR_PIDS $_PID $_DAEMON"
  fi
}

for DAEMON in $DAEMONS ; do
  echo "Starting $DAEMON"
  startDaemon $DAEMON
done


# monitor all daemons and restart:
#
while true ; do
  sleep 10
  set -- $MONITOR_PIDS
  MONITOR_PIDS=""

  while [[ $# -gt 1 ]] ; do
    __PID=$1
    __DAEMON=$2
    shift 2

    ps -p $__PID
    __IS_OK=$?

    if [[ $__IS_OK -gt 0 ]] ; then
      startDaemon $__DAEMON
    else
      MONITOR_PIDS="$MONITOR_PIDS $__PID $__DAEMON"
    fi
    sleep 1
  done
done
