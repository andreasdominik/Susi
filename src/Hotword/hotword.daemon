#!/bin/bash -xv
#
# Hotword service for NoSnips replacement.
# Usage:
#     hotword.daemon path/to/nosnips.toml
#     hotword.daemon /etc/nosnips.toml
#
# https://github.com/dbohdan/remarshal is used for reading toml
# jq is used for parsing JSON
#

# set config path:
#
CONFIG="/etc/susi.toml"
TOML2ENV="/usr/local/bin/toml2env"
source $TOML2ENV $CONFIG
BASE_DIR="$local_base_directory"

# load tool funs:
#
source $BASE_DIR/src/Tools/funs.sh

# Topics:
#
source $BASE_DIR/src/Tools/topics.sh

cd $local_work_dir

DETECTOR="$(relDir $hotword_binary)"
MODEL="$(relDir $hotword_model_path/$hotword_model)"


# construct MQTT message for hotword detected
#
PAYLOAD="{
  \"siteId\": \"$local_siteId\",
  \"modelId\": \"$hotword_local_hotword\",
  \"modelVersion\": \"1.0\",
  \"modeltype\": \"personal\",
  \"currentSensitivity\": $hotword_sensitivity
}"

while true ; do

  # run Snowboy until hotword is detected
  #
  $DETECTOR $MODEL $hotword_sensitivity
  STATUS=$?
  STATUS=0  # cancel should work for debugging
  echo "$STATUS"

  # publish "hotword detected" if status == 0; otherwise just keep
  # detector stopped:
  #
  if [[ $STATUS -eq 0 ]] ; then
    publish $TOPIC_HOTWORD "$PAYLOAD"
  fi

  # wait until retsart is triggered via:
  #     mosquitto_pub -h <HOSTNAME> -t 'hermes/hotword/toggleOn' \
  #         -m '{"siteId": "default"}'
  #
  subscribeSiteOnce $local_siteId $TOPIC_HOTWORD_ON
done
