#!/bin/bash
#
# Record service for NoSnips replacement.
# Usage:
#     record.daemon
#
#

# set config path:
#
CONFIG="/etc/susi.toml"
source $SUSI_INSTALLATION/bin/toml2env $CONFIG

# load tool funs:
#
source $SUSI_INSTALLATION/src/Tools/funs.sh
source $SUSI_INSTALLATION/src/Tools/topics.sh

# base names for recveived and subm. MQTT message files:
#
MQTT_BASE_NAME="recordDaemon"
MQTT_COUNTER=0

set -xv
cd $local_work_directory

REC_CMD="$(relDir $record_binary)"
REC_FILE="$record_recording_file"
REC_LIMIT="$record_recording_limit"
NOTIFICATION="$record_notification"
START_SOUND="$(relDir $record_notification_start)"
END_SOUND="$(relDir $record_notification_end)"

# main loop:
#  - wait for request
#  - call record binary
#  - base64 encode recording
#  - send MQTT
#
while true ; do

  subscribeSiteOnce $local_siteId $TOPIC_ASR_START

  [[ $NOTIFICATION == true ]] && $PLAY_CMD $START_SOUND
  rm -f $REC_FILE
  $REC_CMD $REC_FILE $REC_LIMIT
  [[ $NOTIFICATION == true ]] && $PLAY_CMD $END_SOUND

  if [[ -s $REC_FILE ]] ; then
    base64 -w 0 $REC_FILE > ${REC_FILE}.b64
  else
    touch ${REC_FILE}.b64
  fi

TOPIC=$TOPIC_ASR_AUDIO
MQTT_COUNTER=$(($MQTT_COUNTER + 1))
PAYLOAD="${MQTT_BASE_NAME}-$(printf "%04d" $MQTT_COUNTER)"

echo -n "{
  \"siteId\": \"$local_siteId\",
  \"sessionId\": \"$MQTT_SESSION_ID\",
  \"id\": \"$MQTT_ID\",
  \"audio\": \""                >  $PAYLOAD
  cat ${REC_FILE}.b64           >> $PAYLOAD
  echo "\" }"                   >> $PAYLOAD

publishFile $TOPIC $PAYLOAD
done
