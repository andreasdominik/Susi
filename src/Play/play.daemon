#!/bin/bash -xv
#
# STT service for NoSnips replacement.
# Usage:
#     stt.daemon path/to/nosnips.toml
#     stt.daemon #/etc/nosnips.toml
#
#

# set config path:
#
CONFIG="/etc/susi.toml"
source $SUSI_INSTALLATION/bin/toml2env $CONFIG

# load tool funs:
#
source $SUSI_INSTALLATION/src/Tools/funs.sh
source $SUSI_INSTALLATION/src/Tools/topics.sh

AUDIO_B64=playAudio.b64
AUDIO=playAudio
# base names for recveived and subm. MQTT message files:
#
MQTT_BASE_NAME="playDaemon"
MQTT_COUNTER=0

cd $local_work_directory

while true ; do

  subscribeSiteOnce $local_siteId $TOPIC_PLAY_REQUEST
  SESSION_ID=$MQTT_SESSION_ID
  ID=$MQTT_ID

  # payload for hotword on/off:
  #
  HOTWORD_PAYLOAD="{
    \"sessionId\": \"no_session\",
    \"siteId\": \"$local_siteId\"
  }"

  # extract base64 audio:
  #
  LISTEN_HOTWORD="$(extractJSONfile .hotword $RECEIVED_PAYLOAD)"
  FADE_IN="$(extractJSONfile .fade_in $RECEIVED_PAYLOAD)"
  extractJSONfile .audio $RECEIVED_PAYLOAD > $AUDIO_B64
  base64 --decode $AUDIO_B64 > $AUDIO

  # use ffmpg for formate detection rather then soxi:
  # MEDIA_TYPE="$(soxi -t $AUDIO)"
  #
  MEDIA_TYPE="$(ffprobe -show_format playAudio 2>/dev/null | grep -Po '(?<=format_name=)[0-9a-zA-Z]+$')"
  AUDIO_NAME="${AUDIO}.${MEDIA_TYPE}"
  mv $AUDIO $AUDIO_NAME

  # kill play if hotword is detected:
  #
  if [[ $LISTEN_HOTWORD == sensitive ]] ; then

    # play the sound in background with fade:
    #
    play $AUDIO_NAME fade $FADE_IN &
    PLAY_PID=$!

    # run Snowboy until hotword is detected
    #
    publish "$TOPIC_HOTWORD_ON" "$HOTWORD_PAYLOAD"
    subscribeSiteOnce $local_siteId $TOPIC_HOTWORD
    kill $PLAY_PID
    publish "$TOPIC_HOTWORD_OFF" "$HOTWORD_PAYLOAD"
  else
    $play_binary $AUDIO_NAME
  fi
  # tell the session manager the status:
  #
  PAYLOAD="{
            \"sessionId\": \"$SESSION_ID\",
            \"id\": \"$ID\",
            \"siteId\": \"$local_siteId\"
           }"
  publish "$TOPIC_PLAY_FINISHED" "$PAYLOAD"

done
